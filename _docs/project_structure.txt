--- Folder Structure ---
.eslintignore
.eslintrc.cjs
[app]
    ├── app.vue
    ├── [components]
        ├── AccountMenu.vue
        ├── AccountMiniCard.client.vue
        ├── AccountSelector.vue
        ├── MiniAccountSelector.vue
        ├── MiniNavBar.vue
        ├── MiniOrderDetails.vue
        ├── MiniOrderList.vue
        ├── NavBar.vue
        ├── NotificationBell.vue
        └── SelectDb.vue
    ├── [composables]
        ├── cars.json
        ├── fetchOrders.spec.ts
        ├── fetchOrders.ts
        ├── getAccounts.js
        ├── getAccounts.test.js
        ├── getDb.tests.ts
        ├── getDb.ts
        ├── selectDb.ts
        ├── sharedState.js
        └── useActiveAccount.js
    ├── error.vue
    ├── index.html
    ├── [mvp]
[front]
    ├── [mini_demo]
nuxt.config.ts
package.json
tsconfig.json
vitest.config.ts

--- File Contents ---

--- File: .eslintignore ---


--- File: .eslintrc.cjs ---
module.exports = {
  env: {
    browser: true,
    es2021: true,
    'vitest-globals/env': true
  },
  extends: [
    'eslint:recommended',
    '@vue/eslint-config-prettier',
    '@vue/eslint-config-typescript',
    'plugin:@typescript-eslint/recommended',
    'plugin:vitest-globals/recommended',
    'plugin:vue-pug/vue3-recommended',
    'plugin:vue/vue3-essential',
    'plugin:prettier/recommended'
  ],
  overrides: [
    {
      env: {
        node: true
      },
      files: ['.eslintrc.{js,cjs}'],
      parserOptions: {
        sourceType: 'script'
      }
    }
  ],
  parserOptions: {
    ecmaVersion: 'latest',
    parser: '@typescript-eslint/parser',
    sourceType: 'module',
    extraFileExtensions: ['.js']
  },
  plugins: ['@typescript-eslint', 'prettier', 'vue'],
  rules: {
    'vue/multi-word-component-names': 'off',
    'vue/no-unused-vars': 'warn'
  }
}


--- File: app\app.vue ---
<template>
  <NuxtLayout>
    <NuxtPage />
  </NuxtLayout>
</template>


--- File: app\components\AccountMenu.vue ---
<template>
  <Menu as="div" class="relative ml-4 inline-block w-56">
    <div>
      <MenuButton class="w-full rounded-md ring-1 ring-inset ring-white hover:bg-gray-100">
        <AccountMiniCard :account="activeAccount" />
        <!-- <ChevronDownIcon class="-mr-1 h-5 w-5 text-gray-400" aria-hidden="true" /> -->
      </MenuButton>
    </div>

    <transition
      enter-active-class="transition ease-out duration-100"
      enter-from-class="transform opacity-0 scale-95"
      enter-to-class="transform opacity-100 scale-100"
      leave-active-class="transition ease-in duration-75"
      leave-from-class="transform opacity-100 scale-100"
      leave-to-class="transform opacity-0 scale-95"
    >
      <MenuItems
        class="absolute right-0 z-10 mt-2 w-56 origin-top-right divide-y divide-gray-100 rounded-md bg-white shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none"
      >
        <AccountSelector />
        <div class="py-1">
          <MenuItem v-slot="{ active }">
            <a
              href="#"
              :class="[
                active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',
                'group flex items-center px-4 py-2 text-sm'
              ]"
            >
              <PencilSquareIcon
                class="mr-3 h-5 w-5 text-gray-400 group-hover:text-gray-500"
                aria-hidden="true"
              />
              Edit
            </a>
          </MenuItem>
          <MenuItem v-slot="{ active }">
            <a
              href="#"
              :class="[
                active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',
                'group flex items-center px-4 py-2 text-sm'
              ]"
            >
              <DocumentDuplicateIcon
                class="mr-3 h-5 w-5 text-gray-400 group-hover:text-gray-500"
                aria-hidden="true"
              />
              Duplicate
            </a>
          </MenuItem>
        </div>
        <div class="py-1">
          <MenuItem v-slot="{ active }">
            <a
              href="#"
              :class="[
                active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',
                'group flex items-center px-4 py-2 text-sm'
              ]"
            >
              <ArchiveBoxIcon
                class="mr-3 h-5 w-5 text-gray-400 group-hover:text-gray-500"
                aria-hidden="true"
              />
              Archive
            </a>
          </MenuItem>
          <MenuItem v-slot="{ active }">
            <a
              href="#"
              :class="[
                active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',
                'group flex items-center px-4 py-2 text-sm'
              ]"
            >
              <ArrowRightCircleIcon
                class="mr-3 h-5 w-5 text-gray-400 group-hover:text-gray-500"
                aria-hidden="true"
              />
              Move
            </a>
          </MenuItem>
        </div>
        <div class="py-1">
          <MenuItem v-slot="{ active }">
            <a
              href="#"
              :class="[
                active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',
                'group flex items-center px-4 py-2 text-sm'
              ]"
            >
              <UserPlusIcon
                class="mr-3 h-5 w-5 text-gray-400 group-hover:text-gray-500"
                aria-hidden="true"
              />
              Share
            </a>
          </MenuItem>
          <MenuItem v-slot="{ active }">
            <a
              href="#"
              :class="[
                active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',
                'group flex items-center px-4 py-2 text-sm'
              ]"
            >
              <HeartIcon
                class="mr-3 h-5 w-5 text-gray-400 group-hover:text-gray-500"
                aria-hidden="true"
              />
              Add to favorites
            </a>
          </MenuItem>
        </div>
        <div class="py-1">
          <MenuItem v-slot="{ active }">
            <a
              href="#"
              :class="[
                active ? 'bg-gray-100 text-gray-900' : 'text-gray-700',
                'group flex items-center px-4 py-2 text-sm'
              ]"
            >
              <TrashIcon
                class="mr-3 h-5 w-5 text-gray-400 group-hover:text-gray-500"
                aria-hidden="true"
              />
              Delete
            </a>
          </MenuItem>
        </div>
      </MenuItems>
    </transition>
  </Menu>
</template>

<script setup>
  import { Menu, MenuButton, MenuItem, MenuItems } from '@headlessui/vue'
  import {
    ArchiveBoxIcon,
    ArrowRightCircleIcon,
    // ChevronDownIcon,
    DocumentDuplicateIcon,
    HeartIcon,
    PencilSquareIcon,
    TrashIcon,
    UserPlusIcon
  } from '@heroicons/vue/20/solid'

  const activeAccount = useActiveAccount()
  console.log('AccountMenu -> activeAccount =', activeAccount.value)
</script>

<style>
  button {
    @apply text-left;
  }
</style>


--- File: app\components\AccountMiniCard.client.vue ---
<template>
  <div class="flex py-2">
    <img id="img1" class="ml-2 h-10 w-10 rounded-full" :src="account.icon" alt="" />
    <div class="ml-3">
      <p class="text font-medium text-gray-900">{{ account.name }}</p>
      <p class="text-sm text-gray-500">{{ account.type }}</p>
    </div>
  </div>
</template>

<script setup>
  defineProps(['account'])
</script>


--- File: app\components\AccountSelector.vue ---
<template>
  <!-- <ul class="m-2 w-60 divide-y divide-gray-200 rounded border"> -->
  <ul class="divide-y divide-gray-200">
    <li
      v-for="account in accounts"
      :key="account.id"
      @click="selectAccount(account)"
      class="cursor-pointer hover:bg-gray-100"
    >
      <AccountMiniCard :account="account" />
    </li>
  </ul>
</template>

<script setup>
  const accounts = await getAccounts()
  const activeAccount = useActiveAccount()
  const emit = defineEmits(['closeAccountSelector'])
  const selectAccount = (account) => {
    console.log('activeAccountId =', account.name, ', #', account.id)
    activeAccount.value = account
    emit('closeAccountSelector')
  }
</script>


--- File: app\components\MiniAccountSelector.vue ---
<template>
  <div style="display: inline-block; margin-right: 30px">
    Select account:
    <select v-model="selectedAccountId">
      <option
        v-for="accountId in accountIds"
        :key="accountId.id"
        :value="accountId.id"
        :name="accountId.name"
      >
        {{ accountId.name }}
      </option>
    </select>
  </div>
</template>

<script setup>
  let selectedAccountId = ref('account0')
  const accountIds = [
    { name: 'Account 0', id: 'account0' },
    { name: 'Account 1', id: 'account1' },
    { name: 'Account 2', id: 'account2' },
    { name: 'Account 3', id: 'account3' },
    { name: 'Account 4', id: 'account4' },
    { name: 'Account 5', id: 'account5' }
  ]
</script>


--- File: app\components\MiniNavBar.vue ---
<template lang="pug">
nav.pb-1.border-b.border-gray-400
  h2.inline-block.mr-12.mb-2 Clean Architecture Mini Demo - Nuxt app
  MiniAccountSelector
  a(href="/" class="mr-1 ml-1 p-1 no-underline text-blue-500 cursor-pointer") Vue App
  a(href="/order" class="mr-1 ml-1 p-1 no-underline text-blue-500 cursor-pointer") Orders
  a(href="/order-data" class="mr-1 ml-1 p-1 no-underline text-blue-500 cursor-pointer") Order datas
  a(href="/" class="mr-1 ml-1 p-1 no-underline text-blue-500 cursor-pointer") Items
  a(href="/" class="mr-1 ml-1 p-1 no-underline text-blue-500 cursor-pointer") ItemDatas
</template>


--- File: app\components\MiniOrderDetails.vue ---
<template>
  <h3>Order: {{ order.name }}</h3>
  <ul>
    <li>Order ID: {{ order.id }}</li>
    <li>Client ID: {{ order.clientId }}</li>
    <li>Supplier ID: {{ order.supplierId }}</li>
    <li>Amount excluding tax: {{ order.amountExclTax }}</li>
    <li>Tax amount: {{ order.taxAmount }}</li>
    <li>Amount including tax: {{ order.amountInclTax }}</li>
    <li>Average tax rate: {{ order.averageTaxRate }}</li>
    <li>Principal: {{ order.principal }}</li>
  </ul>
  <h4 style="text-decoration: underline">Items:</h4>
  <ul>
    <li v-for="item in order.items" :key="item.id">
      <h5>Item: {{ item.name }}</h5>
      <ul>
        <li>Item ID: {{ item.id }}</li>
        <li>Order ID: {{ item.orderId }}</li>
        <li>Quantity: {{ item.quantity }}</li>
        <li>Unit: {{ item.unit }}</li>
        <li>Unit price: {{ item.unitPriceExclTax }}</li>
        <li>Tax rate: {{ item.taxRate * 100 }}%</li>
        <li>Unit price including tax: {{ item.unitPriceInclTax }}</li>
        <li>Amount excluding tax: {{ item.amountExclTax }}</li>
        <li>Tax amount: {{ item.taxAmount }}</li>
        <li>Amount including tax: {{ item.amountInclTax }}</li>
      </ul>
    </li>
  </ul>
</template>

<script setup lang="ts">
  defineProps({
    order: {
      type: Object,
      required: true
    }
  })
</script>


--- File: app\components\MiniOrderList.vue ---
<template>
  <h2>Order Datas</h2>
  <ul>
    <li v-for="order in orders" :key="order.id">
      <MiniOrderDetails :order="order" />
      <pre>
        {{ JSON.stringify(order, null, 2) }}
      </pre>
    </li>
  </ul>
</template>

<script setup>
  const orders = ref(null)
  const bobo = async () => {
    const plop = await fetchOrders(sharedState.selectedAccountId)
    // const plop = await fetchOrders('account0')
    console.log('orders  from bobo', plop)
    console.log('plop type', typeof plop)
    console.log('sharedState in bobo', sharedState.selectedAccountId)
    orders.value = plop
  }
  onMounted(async () => {
    await bobo()
  })

  // Watch for changes in selectedAccountId
  watch(() => sharedState.selectedAccountId, bobo)
</script>


--- File: app\components\NavBar.vue ---
<template>
  <Disclosure as="nav" class="bg-white shadow" v-slot="{ open }">
    <!-- <div class="mx-auto max-w-7xl px-4 sm:px-6 lg:px-8">    -->
    <div class="mx-auto px-4 sm:px-6 lg:px-8">
      <div class="flex h-16 justify-between">
        <div id="LeftSection" class="flex">
          <div class="-ml-2 mr-2 flex items-center md:hidden">
            <!-- Mobile menu button -->
            <DisclosureButton
              class="relative inline-flex items-center justify-center rounded-md p-2 text-gray-400 hover:bg-gray-100 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500"
            >
              <span class="absolute -inset-0.5" />
              <span class="sr-only">Open main menu</span>
              <Bars3Icon v-if="!open" class="block h-6 w-6" aria-hidden="true" />
              <XMarkIcon v-else class="block h-6 w-6" aria-hidden="true" />
            </DisclosureButton>
          </div>
          <div class="flex flex-shrink-0 items-center">
            <nuxt-link to="/">
              <img class="h-8 w-auto" src="/images/logos/flexup-logo.svg" alt="Your Company" />
            </nuxt-link>
          </div>
          <div class="hidden md:ml-6 md:flex md:space-x-8">
            <!-- Current: "border-indigo-500 text-gray-900", Default: "border-transparent text-gray-500 hover:border-gray-300 hover:text-gray-700" -->
            <a
              href="/mini"
              class="inline-flex items-center border-b-2 border-indigo-500 px-1 pt-1 text-sm font-medium text-gray-900"
              >Mini Demo</a
            >
            <a
              href="/accounts"
              class="inline-flex items-center border-b-2 border-indigo-500 px-1 pt-1 text-sm font-medium text-gray-900"
              >Accounts</a
            >
            <NuxtLink
              to="/playground"
              class="inline-flex items-center border-b-2 border-transparent px-1 pt-1 text-sm font-medium text-gray-500 hover:border-gray-300 hover:text-gray-700"
              >Playground</NuxtLink
            >
            <!-- <a
              href="#"
              class="inline-flex items-center border-b-2 border-indigo-500 px-1 pt-1 text-sm font-medium text-gray-900"
              >Dashboard</a
            >
            <a
              href="#"
              class="inline-flex items-center border-b-2 border-transparent px-1 pt-1 text-sm font-medium text-gray-500 hover:border-gray-300 hover:text-gray-700"
              >Team</a
            >
            <a
              href="#"
              class="inline-flex items-center border-b-2 border-transparent px-1 pt-1 text-sm font-medium text-gray-500 hover:border-gray-300 hover:text-gray-700"
              >Projects</a
            >
            <a
              href="#"
              class="inline-flex items-center border-b-2 border-transparent px-1 pt-1 text-sm font-medium text-gray-500 hover:border-gray-300 hover:text-gray-700"
              >Calendar</a
            > -->
          </div>
        </div>
        <div id="RightSection" class="flex items-center">
          <!-- <Dropdown /> -->
          <!-- <AddNew /> -->
          <div class="hidden md:ml-4 md:flex md:flex-shrink-0 md:items-center">
            <!-- <NotificationBell /> -->
            <AccountMenu />
          </div>
        </div>
      </div>
    </div>

    <DisclosurePanel class="md:hidden">
      <div class="space-y-1 pb-3 pt-2">
        <!-- Current: "bg-indigo-50 border-indigo-500 text-indigo-700", Default: "border-transparent text-gray-500 hover:bg-gray-50 hover:border-gray-300 hover:text-gray-700" -->
        <DisclosureButton
          as="a"
          href="#"
          class="block border-l-4 border-indigo-500 bg-indigo-50 py-2 pl-3 pr-4 text-base font-medium text-indigo-700 sm:pl-5 sm:pr-6"
          >Dashboard</DisclosureButton
        >
        <DisclosureButton
          as="a"
          href="#"
          class="block border-l-4 border-transparent py-2 pl-3 pr-4 text-base font-medium text-gray-500 hover:border-gray-300 hover:bg-gray-50 hover:text-gray-700 sm:pl-5 sm:pr-6"
          >Team</DisclosureButton
        >
        <DisclosureButton
          as="a"
          href="#"
          class="block border-l-4 border-transparent py-2 pl-3 pr-4 text-base font-medium text-gray-500 hover:border-gray-300 hover:bg-gray-50 hover:text-gray-700 sm:pl-5 sm:pr-6"
          >Projects</DisclosureButton
        >
        <DisclosureButton
          as="a"
          href="#"
          class="block border-l-4 border-transparent py-2 pl-3 pr-4 text-base font-medium text-gray-500 hover:border-gray-300 hover:bg-gray-50 hover:text-gray-700 sm:pl-5 sm:pr-6"
          >Calendar</DisclosureButton
        >
      </div>
      <div class="border-t border-gray-200 pb-3 pt-4">
        <div class="flex items-center px-4 sm:px-6">
          <div class="flex-shrink-0">
            <img
              class="h-10 w-10 rounded-full"
              src="https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80"
              alt=""
            />
          </div>
          <div class="ml-3">
            <div class="text-base font-medium text-gray-800">Tom Cook</div>
            <div class="text-sm font-medium text-gray-500">tom@example.com</div>
          </div>
          <button
            type="button"
            class="relative ml-auto flex-shrink-0 rounded-full bg-white p-1 text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2"
          >
            <span class="absolute -inset-1.5" />
            <span class="sr-only">View notifications</span>
            <BellIcon class="h-6 w-6" aria-hidden="true" />
          </button>
        </div>
        <div class="mt-3 space-y-1">
          <DisclosureButton
            as="a"
            href="#"
            class="block px-4 py-2 text-base font-medium text-gray-500 hover:bg-gray-100 hover:text-gray-800 sm:px-6"
            >Your Profile</DisclosureButton
          >
          <DisclosureButton
            as="a"
            href="#"
            class="block px-4 py-2 text-base font-medium text-gray-500 hover:bg-gray-100 hover:text-gray-800 sm:px-6"
            >Settings</DisclosureButton
          >
          <DisclosureButton
            as="a"
            href="#"
            class="block px-4 py-2 text-base font-medium text-gray-500 hover:bg-gray-100 hover:text-gray-800 sm:px-6"
            >Sign out</DisclosureButton
          >
        </div>
      </div>
    </DisclosurePanel>
  </Disclosure>
</template>

<script setup>
  import { Disclosure, DisclosureButton, DisclosurePanel } from '@headlessui/vue'
  import { Bars3Icon, BellIcon, XMarkIcon } from '@heroicons/vue/24/outline'
</script>


--- File: app\components\NotificationBell.vue ---
<template>
  <button
    id="Bell"
    type="button"
    class="relative rounded-full bg-white p-1 text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2"
  >
    <span class="absolute -inset-1.5" />
    <span class="sr-only">View notifications</span>
    <BellIcon class="h-6 w-6" aria-hidden="true" />
  </button>
</template>

<script setup>
  import { BellIcon } from '@heroicons/vue/24/outline'
</script>


--- File: app\components\SelectDb.vue ---
<template>
  <select v-model="selectedDb" @change="onChange">
    <option v-for="option in options" :value="option.value" :key="option.value">
      {{ option.text }}
    </option>
  </select>
</template>

<script setup>
  const options = ref([
    { text: 'In Memory', value: 'inMemory' },
    { text: 'JSON Server', value: 'jsonServer' }
  ])
  const selectedDb = ref(options.value[0].value)

  const onChange = async () => {
    const response = await selectDb(selectedDb.value)
    console.log('response from onChange:', response)
    console.log(
      `IMPORTANT NOTE: changing the selectedDb in Vue will have no effect, because the Db source is in the process.env, and this cannot be changed from vue, in spite of all the console.logs .... You need to change the .env file and restart the server.`
    )
  }
</script>


--- File: app\composables\cars.json ---
[
  {
    "id": 1,
    "year": 2018,
    "name": "Range Rover Sport",
    "price": 84777,
    "city": "Toronto",
    "make": "Land Rover",
    "image": "https://www.carhelpcanada.com/wp-content/uploads/2019/12/2020-Range-Rover-Evoque-2.jpg",
    "seats": 5,
    "miles": "14,666",
    "features": ["No Accidents", "Low KM", "Vehicle Detailed", "Leather Interior"],
    "description": "Lorem ipsum dolor sit amet consectetur adipisicing elit. Debitis odio et laboriosam!"
  },
  {
    "id": 2,
    "year": 2021,
    "name": "Rolls Royce Ghost",
    "price": 455000,
    "image": "https://robbreport.com/wp-content/uploads/2021/03/1-5.jpg?w=1000",
    "seats": 5,
    "city": "Miami",
    "make": "Rolls-Royce",
    "miles": "53,666",
    "features": ["No Accidents", "Low KM", "Vehicle Detailed", "Leather Interior"],
    "description": "Lorem ipsum dolor sit amet consectetur adipisicing elit. Debitis odio et laboriosam! Numquam ut rem, blanditiis est rerum tenetur maxime delectus"
  },
  {
    "id": 4,
    "year": 2020,
    "name": "Porsche Taycan",
    "price": 180434,
    "image": "https://www.topgear.com/sites/default/files/cars-car/carousel/2021/02/pcgb20_1441_fine.jpg",
    "seats": 5,
    "make": "Porsche",
    "city": "Toronto",
    "miles": "0",
    "features": ["No Accidents", "Low KM", "Vehicle Detailed", "Leather Interior"],
    "description": "Lorem ipsum dolor sit amet consectetur adipisicing elit. Debitis odio et"
  },
  {
    "id": 5,
    "name": "Land Rover Luxury",
    "price": 200434,
    "image": "https://www.motortrend.com/uploads/2022/04/2022-Range-Rover-First-Edition-P530-SWB-on-road-1.jpg?fit=around%7C875:492",
    "seats": 5,
    "make": "Land Rover",
    "city": "Toronto",
    "miles": "0",
    "features": ["No Accidents", "Low KM", "Vehicle Detailed", "Leather Interior"],
    "description": "Lorem ipsum dolor sit amet consectetur adipisicing elit. Debitis odio et"
  },
  {
    "id": 6,
    "name": "Toyota Corolla",
    "year": 2015,
    "price": 23000,
    "image": "https://crdms.images.consumerreports.org/c_lfill,w_470,q_auto,f_auto/prod/cars/chrome/white/2022TOC040001_1280_01",
    "seats": 5,
    "make": "Toyota",
    "city": "Toronto",
    "miles": "0",
    "features": ["No Accidents", "Low KM", "Vehicle Detailed", "Leather Interior"],
    "description": "Lorem ipsum dolor sit amet consectetur adipisicing elit. Debitis odio et"
  },
  {
    "id": 7,
    "name": "Toyota Sienna",
    "year": 2019,
    "price": 34000,
    "image": "https://upload.wikimedia.org/wikipedia/commons/2/22/2021_Toyota_Sienna_XLE_Hybrid%2C_front_12.21.21.jpg",
    "seats": 5,
    "make": "Toyota",
    "city": "Toronto",
    "miles": "0",
    "features": ["No Accidents", "Low KM", "Vehicle Detailed", "Leather Interior"],
    "description": "Lorem ipsum dolor sit amet consectetur adipisicing elit. Debitis odio et"
  },
  {
    "id": 8,
    "name": "Porsche Targa",
    "year": 2014,
    "price": 250000,
    "image": "https://hips.hearstapps.com/hmg-prod/images/2021-porsche-911-targa-4-4s-108-1597085217.jpg?crop=0.521xw:0.389xh;0.274xw,0.413xh&resize=1200:*",
    "seats": 5,
    "make": "Porsche",
    "city": "Toronto",
    "miles": "0",
    "features": ["No Accidents", "Low KM", "Vehicle Detailed", "Leather Interior"],
    "description": "Lorem ipsum dolor sit amet consectetur adipisicing elit. Debitis odio et"
  },
  {
    "id": 9,
    "name": "Kia Seltos",
    "year": 2012,
    "price": 39000,
    "image": "https://i.gaw.to/content/photos/53/04/530444-kia-seltos-2024-une-bonne-mise-a-jour-s-en-vient.jpg?1024x640",
    "seats": 5,
    "make": "Kia",
    "city": "Miami",
    "miles": "0",
    "features": ["No Accidents", "Low KM", "Vehicle Detailed", "Leather Interior"],
    "description": "Lorem ipsum dolor sit amet consectetur adipisicing elit. Debitis odio et"
  }
]


--- File: app\composables\fetchOrders.spec.ts ---
// import { fetchOrders } from './fetchOrders'

describe('fetchOrders', () => {
  it('should return an array of orders for existing account ID', async () => {
    // const accountId = 'account0'
    // const orders = await fetchOrders(accountId)
    // console.log('fetchOrders.spec.ts → orders from test:', orders)
    // expect(orders).toEqual([])
    expect(true).toBe(true)
  })

  // it('should return an empty array for non-existing account ID', async () => {
  //   const accountId = 'account0'
  //   const orders = await fetchOrders(accountId)
  //   expect(orders).toEqual([])
  //   // expect(true).toBe(true)
  // })
})


--- File: app\composables\fetchOrders.ts ---
import axios from 'axios'

// const API_URL = process.env.API_URL
// import { config } from 'dotenv'
// config() // load variables from .env into process.env
// const API_URL = process.env.API_URL || 'http://127.0.0.1:8787' // ceci ne fonctionne pas
const API_URL = 'http://127.0.0.1:8787'

export const fetchOrders = async (accountId: string) => {
  const url = `${API_URL}/order/${accountId}`
  // console.log('process.env:', process.env.API_URL)
  // console.log('Vue → fetchOrders → url', url)
  try {
    const response = await axios.get(url)
    // console.log('OK')
    // console.log('Vue → fetchOrders:', response.data)
    return response.data
  } catch (error) {
    console.log('Vue → fetchOrders: Not OK')
    console.error(error)
  }
}


--- File: app\composables\getAccounts.js ---
import axios from 'axios'
// const API_URL = process.env.API_URL || 'http://127.0.0.1:8787' // ceci ne fonctionne pas
const API_URL = 'http://127.0.0.1:8787'

export const getAccounts = async (prop = '', value = '') => {
  const url = `${API_URL}/account`
  // console.log('process.env:', process.env.API_URL)
  // console.log('Vue → fetchOrders → url', url)
  // try {
  const { data } = await axios.get(url)
  // console.log('OK')
  // console.log('Vue → getAccounts : data =', data)
  if (!prop) return data
  return data.filter((account) => account[prop] === value)
  // } catch (error) {
  //   console.log('Not OK')
  //   console.error(error)
  // }
}

//
// export const accountList = [
//   {
//     id: 1,
//     name: 'FlexUp',
//     type: 'Activity',
//     icon: '/images/profiles/flexup.svg'
//   },
//   {
//     id: 2,
//     name: "Pizza d'Oro",
//     type: 'Business',
//     icon: '/images/profiles/pizza_d_oro.png'
//   },
//   {
//     id: 3,
//     name: 'Fabrizio Nastri',
//     type: 'Personal',
//     icon: '/images/profiles/fabrizio_nastri.jpeg'
//   },
//   {
//     id: 4,
//     name: 'Frédéric Lasnier',
//     type: 'Personal',
//     icon: '/images/profiles/fred.png'
//   }
// ]
//
// export const getAccounts = (prop = '', value = '') => {
//   if (!prop) return accountList
//   // returns an array of accounts that match the prop and value
//   return accountList.filter((account) => account[prop] === value)
// }

export default getAccounts


--- File: app\composables\getAccounts.test.js ---
import { getAccounts } from './getAccounts.js'

import { accounts } from '../../mock/inMemory'

describe('getAccounts', () => {
  // console.log('accountDatas:', accountDatas2)
  it('should return full accounts list when no arguments are provided', async () => {
    const assertion = await getAccounts()
    const result = accounts
    expect(assertion).toEqual(result)
  })

  it('should return an account when the id is provided', async () => {
    const assertion = await getAccounts('id', 'account1')
    const result = accounts.slice(0, 1)
    expect(assertion).toEqual(result)
  })

  it('should return an account when the name is provided', async () => {
    const assertion = await getAccounts('name', 'FlexUp')
    // console.log('assertion:', assertion)
    const result = accounts.slice(0, 1)
    expect(assertion).toEqual(result)
  })
  // it('should be true', () => {
  //   expect(true).toBe(true)
  // })
})


--- File: app\composables\getDb.tests.ts ---
// import getDb from './getDb'
// import { accountDatas } from './inMemory'

describe('getDb', () => {
  it('should return the mock database', () => {
    // const data = getDb()
    // console.log('accountDatas: ', data[0])

    // expect(data).toEqual(accountDatas)

    expect(1).toEqual(1)
  })
})


--- File: app\composables\getDb.ts ---
// import db from 'mock/cars.json'
// import db from 'mock/jsonServer.json'
// import cars from './cars.json'

// import { accountDatas } from '../../mock/inMemory'
// import { accountDatas } from './inMemory'

export const getDb = () => {
  // console.log('mock db: ', cars)
  // return accountDatas
  return 'getDb'
}

export default getDb


--- File: app\composables\selectDb.ts ---
import axios from 'axios'

import dotenv from 'dotenv'
dotenv.config()
const API_URL = process.env.API_URL

export const selectDb = async (selectedDb: string) => {
  try {
    const { data } = await axios.post(`${API_URL}/db/${selectedDb}`)
    // console.log('Vue → selectedDb function:', data)
    return data
  } catch (error) {
    console.error(error)
  }
}


--- File: app\composables\sharedState.js ---
import { reactive } from 'vue'

export const sharedState = reactive({
  selectedAccountId: 'account0' // Default value
})


--- File: app\composables\useActiveAccount.js ---
import { useLocalStorage } from '@vueuse/core'

export const useActiveAccount = useLocalStorage('activeAccount', {
  id: 1,
  name: 'FlexUp',
  type: 'Activity',
  icon: '/images/profiles/flexup.svg'
})


--- File: app\error.vue ---
<script setup>
  const error = useError()
  const handleError = () => {
    clearError({
      redirect: '/'
    })
  }
</script>

<template>
  <div class="flex h-screen flex-col items-center justify-center gap-7 leading-loose">
    <h1 class="text-8xl font-bold">Fabri Error</h1>
    <h2 class="p-5 px-20 text-6xl font-bold">
      {{ error?.statusCode }}
    </h2>
    <p>{{ error?.message }}</p>
    <button @click="handleError">Go back</button>
  </div>
</template>


--- File: app\index.html ---
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Document</title>
</head>
<body>
  <h1>Hello</h1>
  <img src="./app/public/images/profiles/fabrizio_nastri.jpeg"/>

</body>
</html>

--- File: nuxt.config.ts ---
// https://nuxt.com/docs/api/configuration/nuxt-config

export default defineNuxtConfig({
  // devServer: {
  //   host: '0.0.0.0', // Listen to all network interfaces
  //   port: 3000 // Default port is 3000
  // },
  srcDir: 'app',
  devtools: { enabled: false },
  modules: ['@nuxtjs/tailwindcss', '@nuxtjs/eslint-module', 'nuxt-vitest', '@nuxt/image'],
  buildModules: ['@vueuse/nuxt'],
  plugins: [
    //
  ],
  imports: {
    dirs: ['composables/**', '../api/utils/**', '../mock/**']
  },
  // css: ['@/assets/main.css'], // removed, use tailwind instead
  vite: {
    define: {
      'process.env.DEBUG': false
    }
  }
})


--- File: package.json ---
{
  "name": "nuxt-app",
  "private": true,
  "type": "module",
  "scripts": {
    "build": "nuxt build",
    "dev": "nuxt dev",
    "format": "prettier --write .",
    "generate": "nuxt generate",
    "lint": "eslint --ext .js,.vue --ignore-path .gitignore .",
    "postinstall": "nuxt prepare",
    "preview": "nuxt preview",
    "test:cov": "vitest --reporter verbose --coverage",
    "test": "vitest --reporter verbose",
    "server": "nodemon",
    "db": " json-server --port 3057 --watch ./db/db.json",
    "mock": "json-server --port 3057 --watch ./mock/jsonServer.json",
    "start": "concurrently \"npm run mock\" \"npm run nodemon\"  \"npm run dev\" \"npm run test\" "
  },
  "dependencies": {
    "@hono/node-server": "^1.2.0",
    "@mdi/font": "^7.2.96",
    "@tailwindcss/forms": "^0.5.6",
    "@typescript-eslint/eslint-plugin": "^6.7.4",
    "@typescript-eslint/parser": "^6.7.4",
    "axios": "^1.5.1",
    "hono": "^3.7.5"
  },
  "devDependencies": {
    "@headlessui/vue": "^1.7.16",
    "@heroicons/vue": "^2.0.18",
    "@nuxt/devtools": "latest",
    "@nuxt/image": "1.0.0-rc.3",
    "@nuxtjs/eslint-module": "^4.1.0",
    "@nuxtjs/tailwindcss": "^6.8.0",
    "@types/node": "^20.8.2",
    "@vue/eslint-config-prettier": "^8.0.0",
    "@vue/eslint-config-typescript": "^12.0.0",
    "@vue/language-plugin-pug": "^1.8.15",
    "@vueuse/core": "^10.5.0",
    "@vueuse/nuxt": "^10.5.0",
    "concurrently": "^8.2.1",
    "eslint": "^8.50.0",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-prettier": "^5.0.0",
    "eslint-plugin-vitest-globals": "^1.4.0",
    "eslint-plugin-vue": "^9.17.0",
    "eslint-plugin-vue-pug": "^0.6.0",
    "happy-dom": "11.0.0",
    "nodemon": "^3.0.1",
    "nuxt": "^3.7.4",
    "nuxt-vitest": "^0.11.0",
    "prettier": "^3.0.3",
    "prettier-plugin-tailwindcss": "^0.5.5",
    "pug": "^3.0.2",
    "ts-node": "^10.9.1",
    "tsx": "^3.13.0",
    "typescript": "^5.2.2",
    "vitest": "^0.33.0"
  }
}

--- File: tsconfig.json ---
{
  // https://nuxt.com/docs/guide/concepts/typescript
  "extends": "./.nuxt/tsconfig.json",
  "compilerOptions": {
    "composite": true,
    "baseUrl": ".",
    "paths": {
      "~/*": ["./*"],
      "@/*": ["./app/*"],
      "app/*": ["./app/*"],
      "api/*": ["./api/*", "./api"],
      "src/*": ["./api/*", "./api"],
      "core/*": ["./api/core/*", "./api/core"],
      "entities/*": ["./api/core/entities/*", "./api/core/entities"],
      "usecases/*": ["./api/core/usecases/*", "./api/core/usecases"],
      "gateways/*": ["./api/core/gateways/*", "./api/core/gateways"],
      "adapters/*": ["./api/adapters/*", "./api/adapters"],
      "utils/*": ["./api/utils/*", "./api/utils"],
      "mock/*": ["./mock/*", "./mock"]
    },
    "ts-node": {
      "esm": true,
      "experimentalSpecifierResolution": "node"
    },
    "types": ["vitest/globals"] // to avoid linting error
  },
  "include": ["api/**/*", "app/**/*", "mock/**/*"]
}


--- File: vitest.config.ts ---
import { defineVitestConfig } from 'nuxt-vitest/config'
import path from 'path'
import { fileURLToPath } from 'node:url'
export default defineVitestConfig({
  // plugins: path.resolve(__dirname,  vue()  ],
  test: {
    environment: 'nuxt',
    globals: true,
    includeSource: ['api/**/*.{js,ts}', 'app/**/*.{js,ts,vue}'],
    root: fileURLToPath(new URL('./', import.meta.url))
  },
  resolve: {
    alias: {
      app: path.resolve(__dirname, './app'),
      components: path.resolve(__dirname, './app/components'),
      composables: path.resolve(__dirname, './app/composables'),
      layouts: path.resolve(__dirname, './app/layouts'),
      pages: path.resolve(__dirname, './app/pages'),
      server: path.resolve(__dirname, './app/server'),
      usecases: path.resolve(__dirname, './app/core/usecases'),
      api: path.resolve(__dirname, './api'),
      adapters: path.resolve(__dirname, './api/adapters'),
      entities: path.resolve(__dirname, './api/core/entities'),
      gateways: path.resolve(__dirname, './api/core/gateways'),
      mock: path.resolve(__dirname, './mock'),
      utils: path.resolve(__dirname, './api/utils')
      // '~': path.resolve(__dirname, './'),
      // '~/*': path.resolve(__dirname, './*'),
      // '@': path.resolve(__dirname, './app'),
      // '@/*': path.resolve(__dirname, './app/*'),
      // 'api/*': path.resolve(__dirname, './api/*'),
      // 'app/*': path.resolve(__dirname, './app/*'),
      // 'src/*': path.resolve(__dirname, './api/*', './api'),
      // 'core/*': path.resolve(__dirname, './api/core/*', './api/core'),
      // 'entities/*': path.resolve(__dirname, './api/core/entities/*', './api/core/entities'),
      // 'usecases/*': path.resolve(__dirname, './api/core/usecases/*', './api/core/usecases'),
      // 'gateways/*': path.resolve(__dirname, './api/core/gateways/*', './api/core/gateways'),
      // 'adapters/*': path.resolve(__dirname, './api/adapters/*', './api/adapters'),
      // 'utils/*': path.resolve(__dirname, './api/utils/*', './api/utils'),
      // 'mock/*': path.resolve(__dirname, './mock/*', './mock')
    }
  }
})

